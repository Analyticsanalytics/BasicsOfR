#Basic Function


##############   TREATMENT OF MISSING VALUES   ###############################
#Checking if there is any missing element in the dataset
length(Dataset[is.na(Dataset)])

#Show the missing values in all columns
colSums(is.na(train)) OR sapply(train, function(x) sum(is.na(x)))

#Show only columns which have one or more missing values
M <- sapply(train, function(x) sum(is.na(x)))
M[M>0]



#Making the correlation of all but one (Destination, it's categorical) variables
cor(subset(Airlines, select=-Destination))


#args function give the argument of any function
args(geom_line)
#How many TotalDelay are actually zero. It will show values in T & F
summary(Airlines$TotalDelay > 0)

#Flights with TotalDelay of more than or equal to 5 hours and TimeTaken less than 10 hours
subset(Airlines, TotalDelay >= 5 & TimeTaken < 10)
### OR we can use the below code for same
Airlines[Airlines$TotalDelay >= 5 & Airlines$TimeTaken < 10, ]

#Flights with TotalDelay of less than 6 hours OR TimeTaken more than 10 hours
subset(Airlines, TotalDelay < 6 | TimeTaken > 8)

There so many missing values in the Airlines df. we can get only available values using "complete. cases"
good = comple.cases(Airlines) #Taking logical values of missing & available values (T/F)
Airlines[good][1:20,] #Getting only available values, 1 to 20 columns and all the rows. It will remove rows with NA values 




##MAKING ORDERED FACTORS###
#Checking the levels of factor variable age.range
levels(Airlines$age.range)
library(ggplot2)
qplot(data=Airlines, x=age.range) #Suppose the histogram is not in the ordered format

#We can make the histogram in ordered format using this
Airlines$age$range = ordered(Airlines$age.range, level = c("Under 18", "18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
ggplot(aes(x=age.range), data=Airlines) + geom_histogram()
##Or this
levels(Airlines$age.range) = c("Under 18", "18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above")
ggplot(aes(x=age.range), data=Airlines) + geom_histogram()
#Or this. Here Ordered=T, it should be in that order as in levels and use ggplot instead of qplot
Airlines$age.range = factor(Airlines$age.range, level = c("Under 18", "18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above", ordered=T))
ggplot(aes(x=age.range), data=Airlines) + geom_histogram()



#Removing a variable (TotalDelay) from the dataset
Airlines$TotalDelay = NULL

#Remove all the existing contents from R studio
rm(list=ls())

####Deriving TIME VARIABLES IN THE DATASET FROM DATE VARIABLE
#Suppose the time format in Airlines is like this "2015-05-26 21:45:32". We can add the time variables using the strptime() function of PubDate
#Here we've used "%Y-%m-%d %H:%M:%S" bcz date is currently in this format
Airlines$PubDate = strptime(Airlines$PubDate, "%Y-%m-%d %H:%M:%S")

#Now add the variables weekday, Hour & Month in the dataset
Airlines$Weekday = Airlines$PubDate$wday
Airlines$Hour = Airliness$PubDate$hour
Airlines$Month = Airlines$PubDate$mon



#Copying a column to a df from another df. Here we copy sold column from FLipkart to descriptionText
descriptionText$sold = Flipkart$sold

#Suppose there are no columns name in a dataset movie. Add the columns using colnames function
colnames(movies) = c("ID", "Title", "ReleaseDate", "VideoReleaseDate", "IMDB", Thriller", "War", "Western")

#add a "M" in front of all the variable names in movies. check ?paste0()
names(movies) = paste0("M", names(movies))

#Creating a dummy variable Popular in the movies dataset
Nmovies$Popular = rep(0,nrow(movies))




#Normalizing the data using caret package. for each variable, the normalization process subtracts the mean and divides
#by the standard deviation.In the normalized dataset, all of the variables should have mean 0 and standard deviation 1
library(caret)
preproc = preProcess(Flipkart)
FlipNorm = predict(preproc, Flipkart)
