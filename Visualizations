Histogram for one variable with break, limits, facet_wrap, face_grid



Link:- https://www.udacity.com/course/viewer#!/c-ud651/l-755618712/e-814098598/m-814098599
######Chapter-3 EXPLORING ONE VARIABLE######################
ANALYSING FACEBOOK DATA

Removing the existing variables from the console
rm(list=ls())

#\t means tsv is tab separated file
pf = read.csv(file="C:\\Users\\admin\\Desktop\\Udacity\\Exploring One Variable\\pseudo_facebook.tsv", sep="\t")
str(pf)
names(pf)
ggplot(aes(x = dob_day), data = pf) + geom_histogram() 

#We can also create 31 different bars for 31 days
ggplot(aes(x = dob_day), data = pf) + geom_histogram() + scale_x_discrete(breaks = 1:31)


#Here we've split birth histogram  in 12 histograms on month basis. 1 means January, 12 means December. ncol=3 means only 3 histograms in a each row
qplot(data=pf, x= dob_day) + scale_x_discrete(breaks = 1:31) + facet_wrap(~dob_month, ncol=3)

#More on Facet http://www.cookbook-r.com/Graphs/Facets_(ggplot2)/
ggplot(aes(x = dob_day), data = pf) + geom_histogram() + scale_x_discrete(breaks = 1:31)+ facet_wrap(~dob_month, ncol=3)


#Plot for the friend count
ggplot(aes(x = friend_count), data = pf) + geom_histogram()


#Here we've limited friendcount to 1000 only. We can limit y-axis with scale_y_continuous. Continuous for continuos values and scale_y_discrete for discrete values
ggplot(aes(x = friend_count), data = pf) + geom_histogram() + scale_x_continuous(limits = c(0, 1000))


#Dividing the x axis from 0 to 1000 with interval of 50.
ggplot(aes(x = friend_count), data = pf) + geom_histogram(binwidth = 25) + scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))

#Dividing the histogram on the gender to check who has more friends by adding facet_wrap with tilde gender. It'll create 3 hists, male, femal and for NA values
ggplot(aes(x = friend_count), data = pf) + geom_histogram(binwidth = 25) + scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) + facet_wrap(~gender)


#Here Removing the NA values so that there are only two histograms for M/F, not for NA values
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) + geom_histogram() + scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) + facet_wrap(~gender)


tapply(pf$friend_count, pf$gender, median)

#As we see, friend_count is highly dispersed for 0-50. Let's take its log and see 
ggplot(aes(x = friend_count), data = pf) + geom_histogram(binwidth = 25)+ scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))


#If we take direct log of friend_count, minimum in summary becomes negative infinity since log10 of 0 is inf.So, we've added 1 in the friend_count so that minm wont be zero. We'll check the plot using both log10 & sqrt
summary(log(pf$friend_count))
summary(log(pf$friend_count + 1))
ggplot(aes(x = friend_count), data = pf) + geom_histogram() + scale_x_log10()
ggplot(aes(x=friend_count), data=pf) + geom_histogram() + scale_x_sqrt()


#We can show both the graph in same plot using gridExtra package. ncol=2 show both graph in two columns
library(gridExtra)
LogScale = ggplot(aes(x = friend_count), data = pf) + geom_histogram() + scale_x_log10()
SqrtScale = ggplot(aes(x=friend_count), data=pf) + geom_histogram() + scale_x_sqrt()
grid.arrange(LogScale, SqrtScale, ncol=2)



#Frequency Polygon. With FP, we can compare two distributions at once (male, female here)
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +  geom_freqpoly(aes(color = gender), binwidth=20) + scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
